name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true
      
      - name: Type check (if TypeScript files exist)
        run: |
          if [ -f "tsconfig.json" ]; then
            npx tsc --noEmit
          fi
        continue-on-error: true

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Next.js application
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .next
          retention-days: 7

  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .next
      
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.13.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        continue-on-error: true

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Analyze bundle
        run: npm run analyze
        env:
          ANALYZE: true
        continue-on-error: true
      
      - name: Check bundle size
        run: |
          echo "Checking bundle sizes..."
          # Vérifier que le bundle principal ne dépasse pas 300KB
          MAIN_BUNDLE_SIZE=$(find .next/static/chunks -name "main-*.js" -exec du -k {} + | awk '{sum+=$1} END {print sum}')
          if [ "$MAIN_BUNDLE_SIZE" -gt 300 ]; then
            echo "⚠️ Warning: Main bundle size ($MAIN_BUNDLE_SIZE KB) exceeds 300KB threshold"
            exit 1
          else
            echo "✅ Bundle size OK: $MAIN_BUNDLE_SIZE KB"
          fi
        continue-on-error: true